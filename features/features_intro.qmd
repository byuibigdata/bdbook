# Feature Engineering

When working with business data, we often have a database that stores transactions. We will have tables that store credit card transactions, tables that store paycheck transactions, key card tables that store build access transactions, and account tables that store logins or purchase transactions. These transaction tables are usually not at the right level of detail (often called _'unit of analysis'_) for any machine learning or statistical model inference. 

To build our predictive models, these transaction tables need to be munged into the correct space, time, and variable aggregation. Here are the questions we must work through based on our modeling needs.

- What is my spatial unit of interest for predictions? How can I munge my tables to create the foundation of the analysis table?
- What is my label/target that I will use for prediction?
- What features would help predict my label?
- What is my temporal unit of interest for feature building?
- What tables/keys do I need to map my transactions to that spatial unit?

![feature diagram with spatial, variable, and temporal](feature_engineering_ven.svg)

Soyoung L[^3] shared the following image in her Medium post on feature engineering. Notice the examples of moving from transaction data to the _unit of analysis_ level of data that we would use in our modeling.

![](../img/feature_engineering_unit_of_analysis.jpg)

While there is a lot of engineering when building features for models.  There is also a lot of art.

> Feature engineering is more of an art than a formal process. You need to know the domain you're working with to come up with reasonable features. If you're trying to predict credit card fraud, for example, study the most common fraud schemes, the main vulnerabilities in the credit card system, which behaviors are considered suspicious in an online transaction, etc. Then, look for data to represent those features, and test which combinations of features lead to the best results.[^1]

The following image provides a comical view of the comparison between machine learning and feature engineering.

![](the-how-and-why-of-feature-engineering-5-638.jpg)[^2]

[^1]: [How to create useful features for Machine Learning](https://www.dataschool.io/introduction-to-feature-engineering/)
[^2]: [Non-Mathematical Feature Engineering techniques for Data Science | Sachin Joglekar's blog](https://codesachin.wordpress.com/2016/06/25/non-mathematical-feature-engineering-techniques-for-data-science/)
[^3]: [Tutorial: Feature Engineering for Time Series Forecasting in PySpark | by Soyoung L | Medium](https://medium.com/@soyoungluna/tutorial-feature-engineering-for-weekly-time-series-forecasting-in-pyspark-b207c41869f4)